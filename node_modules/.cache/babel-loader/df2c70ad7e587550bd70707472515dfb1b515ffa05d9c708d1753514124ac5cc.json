{"ast":null,"code":"var _jsxFileName = \"/Users/Lukas Mac/Desktop/codetest/src/components/Input/Input.tsx\";\nimport React from \"react\";\nimport \"./Input.scss\";\n\n/**\n * * Input component, used for text input fields\n * @param {string} label - The label for the input field\n * @param {string} htmlFor - Value of the for content property\n * @param {string} name - The name for the input field\n * @param {string} autoComplete - The autocomplete value for the input field\n * @param {string} value - The value for the input field\n * @param {string} type - The type for the input field\n * @param {boolean} required - If the input field is required\n * @param {function} onChange - The function to run when the input field changes\n * @returns {JSX.Element} - Rendered Input component\n *\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Input = ({\n  label,\n  htmlFor,\n  type,\n  name,\n  autoComplete,\n  value,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: htmlFor,\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        id: htmlFor,\n        type: type,\n        name: name,\n        autoComplete: autoComplete,\n        className: \"input__field\",\n        value: value,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_c = Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Input","label","htmlFor","type","name","autoComplete","value","onChange","children","fileName","_jsxFileName","lineNumber","columnNumber","className","required","id","_c","$RefreshReg$"],"sources":["/Users/Lukas Mac/Desktop/codetest/src/components/Input/Input.tsx"],"sourcesContent":["import React from \"react\";\nimport \"./Input.scss\";\n\n/**\n * * Input component, used for text input fields\n * @param {string} label - The label for the input field\n * @param {string} htmlFor - Value of the for content property\n * @param {string} name - The name for the input field\n * @param {string} autoComplete - The autocomplete value for the input field\n * @param {string} value - The value for the input field\n * @param {string} type - The type for the input field\n * @param {boolean} required - If the input field is required\n * @param {function} onChange - The function to run when the input field changes\n * @returns {JSX.Element} - Rendered Input component\n *\n */\n\ntype Props = {\n  label: string;\n  htmlFor: string;\n  name: string;\n  autoComplete: string;\n  value: string;\n  type: string;\n  required?: boolean;\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const Input = ({\n  label,\n  htmlFor,\n  type,\n  name,\n  autoComplete,\n  value,\n  onChange,\n}: Props) => {\n  return (\n    <div>\n      <label htmlFor={htmlFor}>{label}</label>\n      <div className=\"input-container\">\n        <input\n          required\n          id={htmlFor}\n          type={type}\n          name={name}\n          autoComplete={autoComplete}\n          className=\"input__field\"\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </div>\n  );\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA,SAAAC,MAAA,IAAAC,OAAA;AAyBA,OAAO,MAAMC,KAAK,GAAGA,CAAC;EACpBC,KAAK;EACLC,OAAO;EACPC,IAAI;EACJC,IAAI;EACJC,YAAY;EACZC,KAAK;EACLC;AACK,CAAC,KAAK;EACX,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAOG,OAAO,EAAEA,OAAQ;MAAAM,QAAA,EAAEP;IAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACxCb,OAAA;MAAKc,SAAS,EAAC,iBAAiB;MAAAL,QAAA,eAC9BT,OAAA;QACEe,QAAQ;QACRC,EAAE,EAAEb,OAAQ;QACZC,IAAI,EAAEA,IAAK;QACXC,IAAI,EAAEA,IAAK;QACXC,YAAY,EAAEA,YAAa;QAC3BQ,SAAS,EAAC,cAAc;QACxBP,KAAK,EAAEA,KAAM;QACbC,QAAQ,EAAEA;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,GA1BWhB,KAAK;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}