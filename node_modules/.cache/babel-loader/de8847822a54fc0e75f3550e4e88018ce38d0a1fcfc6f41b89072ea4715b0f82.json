{"ast":null,"code":"var _jsxFileName = \"/Users/Lukas Mac/Documents/GitHub/if-codetest/src/components/Navbar/Navbar.tsx\",\n  _s = $RefreshSig$();\nimport { Link, useLocation } from \"react-router-dom\";\nimport logo from \"../../assets/if-logo.svg\";\nimport \"./Navbar.scss\";\nimport { useState } from \"react\";\nimport { websitePages } from \"../../data/websitePages\";\n\n/**\n * * Navbar component, used for the navigation bar\n * * Passed to the Layout component\n * @returns {JSX.Element} - Rendered Navbar component\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Navbar = () => {\n  _s();\n  // Checks the current path and sets the active link\n  const url = useLocation().pathname.split(\"/\")[1];\n  const path = `/${url}`;\n\n  // State for the mobile menu\n  const [isOpen, setIsOpen] = useState(false);\n  const handleOpenMenu = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav__container\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"logo\",\n          src: logo,\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: `nav ${isOpen && \"nav-open\"}`,\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"nav__list\",\n          children: websitePages.map((page, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav__item\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              onClick: () => setIsOpen(false),\n              to: page.link,\n              className: `nav__link ${path === page.link ? \"nav__link--active\" : \"\"}`,\n              children: page.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `nav__toggle ${isOpen && \"nav-open\"}`,\n        onClick: handleOpenMenu,\n        \"aria-label\": \"Toggle menu\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"hamburger\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"xxdd4dA/9T5z9EF42avRH68xlhk=\", false, function () {\n  return [useLocation];\n});\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["Link","useLocation","logo","useState","websitePages","jsxDEV","_jsxDEV","Navbar","_s","url","pathname","split","path","isOpen","setIsOpen","handleOpenMenu","children","className","to","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","page","index","onClick","link","name","_c","$RefreshReg$"],"sources":["/Users/Lukas Mac/Documents/GitHub/if-codetest/src/components/Navbar/Navbar.tsx"],"sourcesContent":["import { Link, useLocation } from \"react-router-dom\";\nimport logo from \"../../assets/if-logo.svg\";\nimport \"./Navbar.scss\";\nimport { useState } from \"react\";\nimport { websitePages } from \"../../data/websitePages\";\n\n/**\n * * Navbar component, used for the navigation bar\n * * Passed to the Layout component\n * @returns {JSX.Element} - Rendered Navbar component\n */\n\nconst Navbar = () => {\n  // Checks the current path and sets the active link\n  const url = useLocation().pathname.split(\"/\")[1];\n  const path = `/${url}`;\n\n  // State for the mobile menu\n  const [isOpen, setIsOpen] = useState(false);\n  const handleOpenMenu = () => {\n    setIsOpen(!isOpen);\n  };\n\n  return (\n    <header>\n      {/* Logo */}\n      <div className=\"nav__container\">\n        <Link to=\"/\">\n          <img className=\"logo\" src={logo} alt=\"logo\" />\n        </Link>\n        {/* Links to different pages */}\n        <nav className={`nav ${isOpen && \"nav-open\"}`}>\n          <ul className=\"nav__list\">\n            {websitePages.map((page, index) => (\n              <li key={index} className=\"nav__item\">\n                <Link\n                  onClick={() => setIsOpen(false)}\n                  to={page.link}\n                  className={`nav__link ${\n                    path === page.link ? \"nav__link--active\" : \"\"\n                  }`}\n                >\n                  {page.name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </nav>\n\n        {/* Mobile Menu */}\n        <button\n          className={`nav__toggle ${isOpen && \"nav-open\"}`}\n          onClick={handleOpenMenu}\n          aria-label=\"Toggle menu\"\n        >\n          <span className=\"hamburger\"></span>\n        </button>\n      </div>\n    </header>\n  );\n};\n\nexport default Navbar;\n"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACpD,OAAOC,IAAI,MAAM,0BAA0B;AAC3C,OAAO,eAAe;AACtB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,YAAY,QAAQ,yBAAyB;;AAEtD;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB;EACA,MAAMC,GAAG,GAAGR,WAAW,CAAC,CAAC,CAACS,QAAQ,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EAChD,MAAMC,IAAI,GAAG,IAAIH,GAAG,EAAE;;EAEtB;EACA,MAAM,CAACI,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3BD,SAAS,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;EAED,oBACEP,OAAA;IAAAU,QAAA,eAEEV,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7BV,OAAA,CAACN,IAAI;QAACkB,EAAE,EAAC,GAAG;QAAAF,QAAA,eACVV,OAAA;UAAKW,SAAS,EAAC,MAAM;UAACE,GAAG,EAAEjB,IAAK;UAACkB,GAAG,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eAEPlB,OAAA;QAAKW,SAAS,EAAE,OAAOJ,MAAM,IAAI,UAAU,EAAG;QAAAG,QAAA,eAC5CV,OAAA;UAAIW,SAAS,EAAC,WAAW;UAAAD,QAAA,EACtBZ,YAAY,CAACqB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC5BrB,OAAA;YAAgBW,SAAS,EAAC,WAAW;YAAAD,QAAA,eACnCV,OAAA,CAACN,IAAI;cACH4B,OAAO,EAAEA,CAAA,KAAMd,SAAS,CAAC,KAAK,CAAE;cAChCI,EAAE,EAAEQ,IAAI,CAACG,IAAK;cACdZ,SAAS,EAAE,aACTL,IAAI,KAAKc,IAAI,CAACG,IAAI,GAAG,mBAAmB,GAAG,EAAE,EAC5C;cAAAb,QAAA,EAEFU,IAAI,CAACI;YAAI;cAAAT,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN;UAAC,GATAG,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUV,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eAGNlB,OAAA;QACEW,SAAS,EAAE,eAAeJ,MAAM,IAAI,UAAU,EAAG;QACjDe,OAAO,EAAEb,cAAe;QACxB,cAAW,aAAa;QAAAC,QAAA,eAExBV,OAAA;UAAMW,SAAS,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb,CAAC;AAAChB,EAAA,CAhDID,MAAM;EAAA,QAEEN,WAAW;AAAA;AAAA8B,EAAA,GAFnBxB,MAAM;AAkDZ,eAAeA,MAAM;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}