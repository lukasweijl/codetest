{"ast":null,"code":"var _jsxFileName = \"/Users/Lukas Mac/Desktop/codetest/src/components/Buttons/LinkButton/LinkButton.tsx\";\nimport \"./LinkButton.scss\";\nimport { Link } from \"react-router-dom\";\nimport { Icons } from \"../../../icons/Icons\";\n\n/**\n * LinkButton component - renders a button that is a link to another page\n * @param {string} link - the link to the page\n * @param {string} btnText - the text to display on the button\n * @param {boolean} rightArrow - whether to display a right arrow icon\n * @param {string} className - additional classes to apply to the button\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Linkbutton = ({\n  link,\n  btnText,\n  rightArrow,\n  className\n}) => {\n  const RightArrowIcon = Icons.RightArrow;\n  return /*#__PURE__*/_jsxDEV(Link, {\n    className: `${className} btn`,\n    to: link,\n    children: [btnText, rightArrow && /*#__PURE__*/_jsxDEV(RightArrowIcon, {\n      className: \"btn-icon\",\n      fill: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_c = Linkbutton;\nexport default Linkbutton;\nvar _c;\n$RefreshReg$(_c, \"Linkbutton\");","map":{"version":3,"names":["Link","Icons","jsxDEV","_jsxDEV","Linkbutton","link","btnText","rightArrow","className","RightArrowIcon","RightArrow","to","children","fill","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Lukas Mac/Desktop/codetest/src/components/Buttons/LinkButton/LinkButton.tsx"],"sourcesContent":["import \"./LinkButton.scss\";\nimport { Link } from \"react-router-dom\";\nimport { Icons } from \"../../../icons/Icons\";\n\n/**\n * LinkButton component - renders a button that is a link to another page\n * @param {string} link - the link to the page\n * @param {string} btnText - the text to display on the button\n * @param {boolean} rightArrow - whether to display a right arrow icon\n * @param {string} className - additional classes to apply to the button\n */\n\ntype Props = {\n  link: string;\n  btnText: string;\n  rightArrow?: boolean;\n  className?: string;\n};\n\nconst Linkbutton = ({ link, btnText, rightArrow, className }: Props) => {\n  const RightArrowIcon = Icons.RightArrow;\n\n  return (\n    <Link className={`${className} btn`} to={link}>\n      {btnText}\n      {rightArrow && <RightArrowIcon className=\"btn-icon\" fill=\"white\" />}\n    </Link>\n  );\n};\n\nexport default Linkbutton;\n"],"mappings":";AAAA,OAAO,mBAAmB;AAC1B,SAASA,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAK,QAAQ,sBAAsB;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AANA,SAAAC,MAAA,IAAAC,OAAA;AAeA,MAAMC,UAAU,GAAGA,CAAC;EAAEC,IAAI;EAAEC,OAAO;EAAEC,UAAU;EAAEC;AAAiB,CAAC,KAAK;EACtE,MAAMC,cAAc,GAAGR,KAAK,CAACS,UAAU;EAEvC,oBACEP,OAAA,CAACH,IAAI;IAACQ,SAAS,EAAE,GAAGA,SAAS,MAAO;IAACG,EAAE,EAAEN,IAAK;IAAAO,QAAA,GAC3CN,OAAO,EACPC,UAAU,iBAAIJ,OAAA,CAACM,cAAc;MAACD,SAAS,EAAC,UAAU;MAACK,IAAI,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEX,CAAC;AAACC,EAAA,GATId,UAAU;AAWhB,eAAeA,UAAU;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}